- content_for :title do
  = @campaign.name

- content_for :meta_tags do
  meta property="og:title" content=@campaign.name
  meta property="og:image" content=@campaign.image.url
  meta property="og:url" content=campaign_url(@campaign)
  meta property="og:description" content=@campaign.description

section.content
  .campaign.row
    .details
      .header
        span.category
          = @campaign.category.name
        h1.name
          = @campaign.name
        span.updated
          = "Criada em #{l(@campaign.created_at, format: :short)} - atualizada há #{time_ago_in_words(@campaign.updated_at)}"
      .image
        = image_tag @campaign.image.url, alt: @campaign.name, title: @campaign.name
      .edit
        = link_to "Editar campanha", edit_campaign_path(@campaign), :class => "btn edit_campaign" if can?(:edit, @campaign)
      .description
        h2 Porque isso é importante
        p= raw @campaign.description.gsub("\n", "<br />")

      .influencers_response
        h2 Respostas dos alvos
        p
          | Ainda não houve resposta dos alvos da campanha. Cobre novamente deles:
        p.poke
          = link_to "Pressionar os alvos", "#poke_buttons", class: :btn
        p.contact
          | Você é um dos nossos alvos? Dê sua resposta atrás de #{mail_to "resposta@seurio.org.br", "resposta@seurio.org.br"}

      .updates
        - if @campaign.posts.size > 0 || can?(:manage, Post)
          h2#posts_title
            | Atualizações da campanha (#{@campaign.posts.size})
          - if can?(:manage, Post)
            = form_for [@campaign, @post], :remote => true do |f|
              .content
                .field_bg
                  = f.text_area :content
              .preview
                = image_tag 'loader.gif', :class => 'loader'
                .preview_data
                = link_to 'Remover visualização', '#', :class => 'remove_preview'
              .actions
                = f.submit "Publicar atualização", :class => "btn"
          .posts[data-path=campaign_posts_path(campaign_id: @campaign.id)]
      
    .campaign_panel
      .poke_buttons#poke_buttons
        .pokes_counter= t("pokes_counter_html", :count => @campaign.pokes.size)
        p
          | Pressione 
          = raw @campaign.influencers.map{|i| content_tag(:strong, i.name)}.to_sentence
          |  usando:
        = render :partial => "poke_form", :locals => { :poke =>  "email" }
        = render :partial => "poke_form", :locals => { :poke =>  "twitter" }
        = render :partial => "poke_form", :locals => { :poke =>  "facebook" }
        .email_text
          span Mensagem que será enviada por e-mail
          = raw @campaign.email_text.gsub("\n", "<br />")
        .twitter_text
          span Mensagem que será compartilhada no Twitter
          = raw @campaign.twitter_text.gsub("\n", "<br />")
        .facebook_text
          span Mensagem que será compartilhada no Facebook
          = raw @campaign.facebook_text.gsub("\n", "<br />")
        - if current_user && current_user.has_poked(@campaign)
          .congrats
            span Parabéns!
            p Você acaba de colaborar para uma cidade melhor.
            p Mas não pare agora! Você deve continuar enviando novas mensagens para pressionar quem decide a responder suas demandas.
        .privacy= raw "O Seu Rio protege a #{link_to "sua privacidade", "#"}."
        - if current_user && current_user.has_poked(@campaign)
          .share
            span Compartilhe
            a href="https://twitter.com/share" class="twitter-share-button" data-lang="pt" data-url=@campaign.short_url Tweetar
            g:plusone size="medium"
            .fb-like data-href=request.url data-send="false" data-layout="button_count" data-width="100" data-show-faces="false"

      .targets
        .titles
          h2
            | Quem decide isso (#{@campaign.influencers.length})
        ol
          - @campaign.influencers.each do |influencer|
            li.target
              .info
                = image_tag influencer.avatar, :title => influencer.name
                p.name= influencer.name
                span.role= influencer.role
              ul.social
                li.fb[class=(influencer.facebook_url.blank? ? "inactive" : "active")]= link_to "facebook", influencer.facebook_url, title: "Página no facebook"
                li.tw[class=(influencer.twitter_url.blank? ? "inactive" : "active")]= link_to "twitter", influencer.twitter_url, title: "Perfil no twitter"
                li.ml[class=(influencer.email.blank? ? "inactive" : "active")]= mail_to influencer.email, "email", title: "E-mail de contato"
          li= link_to "Esquecemos de alguém?", "mailto:contato@seurio.org.br"

      - if @campaign.organizations.any? 
        .supporters
          .titles
            h2 Quem faz acontecer
          ol
            - @campaign.organizations.each do |org|
              li
                = image_tag org.avatar.url, size: "50x50", title: org.name
                span= org.name

      - if @campaign.pokers.any?
        .pokers
          .titles
            h2
              |Quem participou (#{@campaign.pokers.length})
          ol
            - @campaign.pokers.each do |poker|
              li
                = image_tag poker.picture
                span= poker.name
